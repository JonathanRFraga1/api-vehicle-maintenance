{
	"info": {
		"_postman_id": "aa37532c-d79c-4590-b473-8d7b4910eeef",
		"name": "API",
		"description": "Esta coleção documenta a API RESTful para o sistema de Gerenciamento de Manutenção de Veículos.\n\nA API permite que os utilizadores se registem, gira os seus veículos pessoais, e rastreiem um histórico detalhado de manutenções, alertas futuros e anexos (como notas fiscais).\n\n### Variáveis de Ambiente\n\nEsta coleção utiliza as seguintes variáveis:\n\n- `{{base_uri}}`: O URL base da API (ex: `http://localhost`ou `https://api.meusite.com`). Por favor, configure esta variável no seu ambiente Postman.\n    \n- `{{token}}`: O Bearer Token JWT usado para autenticação. Esta variável é (idealmente) preenchida automaticamente pelas requisições de Login ou Register.\n    \n\n### Autenticação (Fluxo Obrigatório)\n\nA API utiliza autenticação **JWT (Bearer Token)**. Todas as rotas, exceto `POST /api/register` e `POST /api/login`, são protegidas.\n\n**O fluxo de autenticação é:**\n\n1. **Registe-se:** Use a requisição `POST /api/register` para criar uma nova conta.\n    \n2. **OU Faça Login:** Use a requisição `POST /api/login` com as suas credenciais.\n    \n3. **Obtenha o Token:** Ambas as rotas (`login` e `register`) irão retornar um `access_token` na resposta.\n    \n4. **Configure o Token:** O `access_token` da resposta automaticamente preencherá o valor da variável da coleção `{{token}}`.\n    \n\nA partir desse momento, todas as outras requisições na coleção usarão automaticamente este token para autenticação.\n\n### Formato Padrão das Respostas\n\nTodas as respostas da API seguem um formato JSON padronizado para consistência:\n\n**Resposta de Sucesso:**\n\n``` json\n{\n    \"status\": \"success\",\n    \"message\": \"Mensagem descritiva aqui\",\n    \"data\": { ... } // (Ou [] se não houver dados)\n}\n\n ```\n\n**Resposta de Erro (Validação ou Outros):**\n\n``` json\n{\n    \"status\": \"error\",\n    \"message\": \"Mensagem de erro principal\",\n    \"errors\": { ... } // (Detalhes dos campos que falharam)\n}\n\n ```\n\n### Recursos Principais\n\nA API está organizada em torno dos seguintes recursos:\n\n- **Auth:** Registo, Login, Logout, Refresh de Token e obtenção dos dados do usuário (`/api/me`).\n    \n- **Vehicles:** CRUD completo para gerir os veículos do usuário (`/api/vehicles`).\n    \n- **Maintenances:** CRUD completo para registar os serviços de manutenção (`/api/maintenances`).\n    \n- **Maintenance Alerts:** CRUD completo para gerir alertas futuros (por tempo ou quilometragem) (`/api/maintenance-alerts`).\n    \n- **Maintenance Attachments:** Endpoints para upload (`multipart/form-data`), download e exclusão de arquivos (ex: PDFs, imagens) associados a uma manutenção.\n    \n- **Service Types:** Endpoint para listar os tipos de serviço padronizados (ex: `oil_change`, `brakes`).\n    \n\n### Filtragem e Paginação\n\nA maioria dos endpoints de listagem (ex: `GET /vehicles`, `GET /maintenances`) suporta paginação e filtragem avançada.\n\n- **Paginação:** Use `?page=1` e `?per_page=15`.\n    \n- **Filtragem:** Use `?filter[campo]=valor`.\n    \n\nPara detalhes específicos sobre quais filtros e campos de ordenação são permitidos, por favor, consulte a documentação (aba **Description**) de cada requisição individual.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20098354",
		"_collection_link": "https://www.postman.com/cloudy-firefly-986210/workspace/api-vehicle-maintenance/collection/20098354-aa37532c-d79c-4590-b473-8d7b4910eeef?action=share&source=collection_link&creator=20098354"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"let token = jsonData.data.access_token;\r",
									"pm.collectionVariables.set(\"token\", token);\r",
									"\r",
									"console.log(\"Variável token definida como: \" + token);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"joao@email.com\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_uri}}/api/login",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "Autentica um usuário existente no sistema.\n\nSe as credenciais estiverem corretas, a API retorna um token de acesso (`access_token`) e os dados do usuário. Este token deve ser enviado no cabeçalho `Authorization` (como Bearer Token) em todas as futuras requisições a endpoints protegidos.\n\n### Parâmetro da URL\n\nNenhum.\n\n**Exemplo de URL:**  \n`{{base_uri}}/api/login`\n\n### Corpo da Requisição (JSON)\n\n**Obrigatório** enviar um objeto JSON com os seguintes campos:\n\n- `email` (string)\n    \n    - O email de login do usuário (ex: \"[joao@email.com](https://mailto:joao@email.com)\").\n        \n- `password` (string)\n    \n    - A senha do usuário (ex: \"123456\").\n        \n\n**Exemplo de Corpo:**\n\n``` json\n{\n    \"email\": \"joao@email.com\",\n    \"password\": \"123456\"\n}\n\n ```\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna uma estrutura de autenticação completa, incluindo o token de acesso e os dados do usuário.\n\n#### Erros Possíveis\n\n- **401 (Unauthorized):**\n    \n    - Ocorre se as credenciais (`email` ou `password`) estiverem incorretas. A resposta conterá a mensagem \"Invalid Credentials\".\n        \n- **422 (Unprocessable Content):**\n    \n    - Os dados enviados falharam na validação. O corpo da resposta conterá uma mensagem e uma lista de erros indicando quais campos são inválidos (ex: `email` em falta, `password` em falta, `email` com formato inválido)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"joao@email.com\",\r\n    \"password\": \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/api/login",
									"path": [
										"api",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:43:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"access_token\": \"{{vault:json-web-token}}\",\n        \"token_type\": \"bearer\",\n        \"expires_in\": 3600,\n        \"user\": {\n            \"id\": 1,\n            \"name\": \"João Silva\",\n            \"email\": \"joao@email.com\",\n            \"created_at\": \"2025-10-22 00:29:35\",\n            \"updated_at\": \"2025-10-22 00:29:35\"\n        }\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"joao@email.com\",\r\n    \"password\": \"1234565\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/login",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:43:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Invalid Credentials\",\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"let token = jsonData.data.access_token;\r",
									"pm.collectionVariables.set(\"token\", token);\r",
									"\r",
									"console.log(\"Variável token definida como: \" + token);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test\",\r\n    \"email\": \"test@email.com\",\r\n    \"password\": \"123456\",\r\n    \"password_confirmation\": \"123456\"\r\n}"
						},
						"url": {
							"raw": "{{base_uri}}/api/register",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Cria uma nova conta de usuário.\n\nApós o registo bem-sucedido, este endpoint **automaticamente faz o login** do novo usuário, retornando um token de acesso (`access_token`) juntamente com os seus dados.\n\n### Parâmetro da URL\n\nNenhum.\n\n**Exemplo de URL:**  \n`{{base_uri}}/api/register`\n\n### Corpo da Requisição (JSON)\n\n**Obrigatório** enviar um objeto JSON com os seguintes campos:\n\n- `name` (string)\n    \n    - O nome completo do utilizador (ex: \"Maria Santos\").\n        \n- `email` (string)\n    \n    - O endereço de email para o login (ex: \"[maria@email.com](https://mailto:maria@email.com)\"). Deve ser único no sistema.\n        \n- `password` (string)\n    \n    - A senha do usuário. Deve ter no mínimo 6 caracteres.\n        \n- `password_confirmation` (string)\n    \n    - A repetição da senha. Deve ser idêntica ao campo `password`.\n        \n\n**Exemplo de Corpo:**\n\n``` json\n{\n    \"name\": \"test\",\n    \"email\": \"test@email.com\",\n    \"password\": \"123456\",\n    \"password_confirmation\": \"123456\"\n}\n\n ```\n\n### Respostas da API\n\n#### Sucesso: 201 Created\n\nRetorna uma resposta de sucesso com o código `201`, contendo o novo objeto `user` e o `access_token` para sessões futuras.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Os dados enviados falharam na validação. O corpo da resposta conterá uma mensagem e uma lista de erros indicando quais campos são inválidos (ex: `email` já está cadastrado, `password` é muito curto, `password_confirmation` não confere)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"test\",\r\n    \"email\": \"test@email.com\",\r\n    \"password\": \"123456\",\r\n    \"password_confirmation\": \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{home_uri}}/api/register",
									"host": [
										"{{home_uri}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:47:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"User created\",\n    \"data\": {\n        \"user\": {\n            \"id\": 6,\n            \"name\": \"test\",\n            \"email\": \"test@email.com\",\n            \"created_at\": \"2025-10-23 08:47:15\",\n            \"updated_at\": \"2025-10-23 08:47:15\"\n        },\n        \"access_token\": \"{{vault:json-web-token}}\"\n    }\n}"
						},
						{
							"name": "Unprocessable Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"test\",\r\n    \"email\": \"test@email.com\",\r\n    \"password\": \"123456\",\r\n    \"password_confirmation\": \"1234565\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/register",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:47:42 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"The email has already been taken. (and 1 more error)\",\n    \"errors\": {\n        \"email\": [\n            \"The email has already been taken.\"\n        ],\n        \"password\": [\n            \"The password field confirmation does not match.\"\n        ]\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Current User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/me",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"me"
							]
						},
						"description": "Obtém os dados do perfil do usuário atualmente autenticado (aquele cujo token está sendo usado).\n\nEste endpoint é protegido e requer um Token de Autenticação (Bearer Token).\n\n### Parâmetro da URL\n\nNenhum.\n\n**Exemplo de URL:**  \n`{{base_uri}}/api/me`\n\n### Corpo da Requisição\n\nNão é necessário enviar um corpo (Body) para esta requisição.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo do utilizador autenticado. Campos sensíveis como `password` são omitidos.\n\n#### Erros Possíveis\n\n- **401 (Unauthorized):**\n    \n    - Ocorre se o token de autenticação (Bearer Token) não for fornecido, for inválido ou estiver expirado."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/api/me",
									"path": [
										"api",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:48:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"User found\",\n    \"data\": {\n        \"id\": 6,\n        \"name\": \"test\",\n        \"email\": \"test@email.com\",\n        \"created_at\": \"2025-10-23 08:47:15\",\n        \"updated_at\": \"2025-10-23 08:47:15\"\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/me",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:53:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Unauthenticated.\",\n    \"errors\": null\n}"
						}
					]
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"let token = jsonData.data.access_token;\r",
									"pm.collectionVariables.set(\"token\", token);\r",
									"\r",
									"console.log(\"Variável token definida como: \" + token);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{home_uri}}/api/refresh",
							"host": [
								"{{home_uri}}"
							],
							"path": [
								"api",
								"refresh"
							]
						},
						"description": "Gera um novo token de autenticação (Bearer Token) para o usuário, invalidando o token atual.\n\nEste endpoint é usado para \"refrescar\" a sessão do utilizador, permitindo que ele permaneça logado após o token original expirar, sem precisar de se autenticar novamente com email e senha.\n\nEste endpoint é protegido e requer um Token de Autenticação (Bearer Token) válido para funcionar.\n\n### Parâmetro da URL\n\nNenhum.\n\n**Exemplo de URL:**  \n`{{base_uri}}/api/refresh`\n\n### Corpo da Requisição\n\nNão é necessário enviar um corpo (Body) para esta requisição.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna uma nova estrutura de autenticação completa, idêntica à resposta do endpoint de Login. O cliente deve substituir o token antigo por este novo `access_token`.\n\n#### Erros Possíveis\n\n- **401 (Unauthorized):**\n    \n    - Ocorre se o token de autenticação (Bearer Token) não for fornecido, for inválido ou já estiver expirado (passou do tempo de \"refresh\")."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "/api/refresh",
									"path": [
										"api",
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:50:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"access_token\": \"{{vault:json-web-token}}\",\n        \"token_type\": \"bearer\",\n        \"expires_in\": 3600,\n        \"user\": {\n            \"id\": 6,\n            \"name\": \"test\",\n            \"email\": \"test@email.com\",\n            \"created_at\": \"2025-10-23 08:47:15\",\n            \"updated_at\": \"2025-10-23 08:47:15\"\n        }\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/refresh",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"refresh"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:54:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Unauthenticated.\",\n    \"errors\": null\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", '');\r",
									"\r",
									"console.log(\"Variável token definida como vazia\");"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/logout",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"logout"
							]
						},
						"description": "Invalida o token de autenticação (Bearer Token) atual do usuário, efetuando o logout.\n\nEste endpoint é protegido e requer um Token de Autenticação (Bearer Token) válido para funcionar.\n\n### Parâmetro da URL\n\nNenhum.\n\n**Exemplo de URL:**  \n`{{base_uri}}/api/logout`\n\n### Corpo da Requisição\n\nNão é necessário enviar um corpo (Body) para esta requisição.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna uma resposta de sucesso simples, indicando que o token foi invalidado. O campo `data` será nulo.\n\n#### Erros Possíveis\n\n- **401 (Unauthorized):**\n    \n    - Ocorre se o token de autenticação (Bearer Token) não for fornecido, for inválido ou já estiver expirado."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "/api/logout",
									"path": [
										"api",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:59:23 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Logout successful\",\n    \"data\": []\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/logout",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 08:59:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Unauthenticated.\",\n    \"errors\": []\n}"
						}
					]
				}
			]
		},
		{
			"name": "Vehicles",
			"item": [
				{
					"name": "List all vehicles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/vehicles?per_page=15&page=1",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"vehicles"
							],
							"query": [
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "filter[brand]",
									"value": "Chevrolet",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "year",
									"disabled": true
								}
							]
						},
						"description": "Esta rota lista todos os veículos paginados do usuário autenticado.\n\n### Paginação\n\n- `?page=1`: O número da página.\n    \n- `?per_page=15`: Quantos itens por página (Max: 15).\n    \n\n### Filtragem\n\nUse o formato `?filter[campo]=valor` para filtrar os resultados.\n\n**Filtros permitidos:**\n\n- `filter[brand]`\n    \n- `filter[model]`\n    \n- `filter[year]`\n    \n- `filter[plate]`\n    \n\n**Exemplo de filtro:**  \n`{{base_uri}}/api/vehicles?filter[brand]=Toyota&filter[year]=2020`\n\n### Ordenação\n\nUse o parâmetro `?sort=campo`.\n\n- Para ordenar de forma **ascendente**, use o nome do campo: `sort=year`.\n    \n- Para ordenar de forma **descendente**, adicione um hífen (`-`): `sort=-mileage`.\n    \n\n**Campos de ordenação permitidos:**\n\n- `brand`\n    \n- `model`\n    \n- `year`\n    \n- `mileage`\n    \n\n**Exemplo de ordenação:**  \n`{{base_uri}}/api/vehicles?sort=-mileage`"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "/api/vehicles?per_page=15&page=1",
									"path": [
										"api",
										"vehicles"
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 22:26:47 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of vehicles\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"brand\": \"Honda\",\n            \"model\": \"Civic\",\n            \"year\": 2020,\n            \"plate\": \"ABC1D34\",\n            \"mileage\": 45000,\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 2,\n            \"brand\": \"Toyota\",\n            \"model\": \"Corolla\",\n            \"year\": 2019,\n            \"plate\": \"DEF5878\",\n            \"mileage\": 62000,\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 17:08:16\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/vehicles?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/vehicles?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/vehicles?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/vehicles\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 2,\n    \"total\": 2\n}"
						},
						{
							"name": "Success (Filtered by Brand)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/vehicles?per_page=15&page=1&filter[brand]=Chevrolet",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles"
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "filter[brand]",
											"value": "Chevrolet"
										},
										{
											"key": "sort",
											"value": "year",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 13:34:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of vehicles\",\n    \"data\": [\n        {\n            \"id\": 7,\n            \"brand\": \"Chevrolet\",\n            \"model\": \"Astra\",\n            \"year\": 2003,\n            \"plate\": \"AAA1234\",\n            \"mileage\": 72000,\n            \"created_at\": \"2025-10-23 13:28:52\",\n            \"updated_at\": \"2025-10-23 13:28:52\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/vehicles?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/vehicles?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/vehicles?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/vehicles\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 1,\n    \"total\": 1\n}"
						},
						{
							"name": "Success (Sorted by mileage)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/vehicles?per_page=15&page=1&sort=mileage",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles"
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "filter[brand]",
											"value": "Chevrolet",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "mileage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 13:35:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of vehicles\",\n    \"data\": [\n        {\n            \"id\": 2,\n            \"brand\": \"Toyota\",\n            \"model\": \"Corolla\",\n            \"year\": 2019,\n            \"plate\": \"DEF5878\",\n            \"mileage\": 62000,\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 17:08:16\"\n        },\n        {\n            \"id\": 7,\n            \"brand\": \"Chevrolet\",\n            \"model\": \"Astra\",\n            \"year\": 2003,\n            \"plate\": \"AAA1234\",\n            \"mileage\": 72000,\n            \"created_at\": \"2025-10-23 13:28:52\",\n            \"updated_at\": \"2025-10-23 13:28:52\"\n        },\n        {\n            \"id\": 8,\n            \"brand\": \"Volkswagen\",\n            \"model\": \"Passat\",\n            \"year\": 2003,\n            \"plate\": \"AAA1A21\",\n            \"mileage\": 72820,\n            \"created_at\": \"2025-10-23 13:29:30\",\n            \"updated_at\": \"2025-10-23 13:29:30\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/vehicles?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/vehicles?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/vehicles?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/vehicles\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 3,\n    \"total\": 3\n}"
						}
					]
				},
				{
					"name": "Show vehicle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"vehicles",
								"{{vehicle_id}}"
							]
						},
						"description": "Obtém os dados de um veículo específico do usuário, usando o ID desse veículo.\n\n### Parâmetro da URL\n\n- `vehicle` (integer) - **Obrigatório**\n    \n    - O ID do veículo que você deseja consultar.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/vehicles/1`\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo do veículo encontrado.\n\nErros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID do veículo (`{vehicle}`) não for encontrado.\n        \n    - Também ocorre se o veículo existir, mas pertencer a outro usuário.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao processar a requisição."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/api/vehicles/",
									"path": [
										"api",
										"vehicles",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 17:11:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Vehicle found\",\n    \"data\": {\n        \"id\": 5,\n        \"brand\": \"Opel\",\n        \"model\": \"Corsa\",\n        \"year\": 1994,\n        \"plate\": \"ABC1D35\",\n        \"mileage\": 1980001,\n        \"created_at\": \"2025-10-22 02:20:37\",\n        \"updated_at\": \"2025-10-22 11:00:21\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles",
										"{{vehicle_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 17:11:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Vehicle not found\",\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Store vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"\r",
									"let vehicleId = jsonData.data.id;\r",
									"\r",
									"pm.collectionVariables.set(\"vehicle_id\", vehicleId);\r",
									"\r",
									"console.log(\"Variável vehicle_id definida como: \" + vehicleId);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"brand\": \"Chevrolet\",\r\n    \"model\": \"Astra\",\r\n    \"year\": 2003,\r\n    \"plate\": \"AAA1234\",\r\n    \"mileage\": 72000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_uri}}/api/vehicles",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"vehicles"
							]
						},
						"description": "Cria um novo veículo e associa-o automaticamente ao usuário autenticado.\n\n### Corpo da Requisição (JSON)\n\n**Obrigatório** enviar um objeto JSON com os seguintes campos:\n\n- `brand` (string)\n    \n    - A marca do veículo (ex: \"Honda\").\n        \n- `model` (string)\n    \n    - O modelo do veículo (ex: \"Civic\").\n        \n- `year` (integer)\n    \n    - O ano de fabrico (ex: `2020`).\n        \n- `mileage` (integer)\n    \n    - A quilometragem atual do veículo (ex: `45000`).\n        \n- `plate` (string)\n    \n    - A placa do veículo. Deve estar no formato Renavan (AAA1234) ou Mercosul (AAA1B23).\n        \n\n**Exemplo de Corpo:**\n\n``` json\n{\n    \"brand\": \"Chevrolet\",\n    \"model\": \"Astra\",\n    \"year\": 2003,\n    \"plate\": \"AAA1234\",\n    \"mileage\": 72000\n}\n\n ```\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo do veículo que acabou de ser criado.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Os dados enviados falharam na validação. O corpo da resposta conterá uma mensagem e uma lista de erros indicando quais campos são inválidos (ex: `plate` com formato incorreto, `brand` em falta, `plate` já existente).\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar guardar o veículo"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"brand\": \"Chevrolet\",\r\n    \"model\": \"Astra\",\r\n    \"year\": 2003,\r\n    \"plate\": \"AAA1234\",\r\n    \"mileage\": 72000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/api/vehicles",
									"path": [
										"api",
										"vehicles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 17:20:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Vehicle stored\",\n    \"data\": {\n        \"id\": 6,\n        \"brand\": \"Chevrolet\",\n        \"model\": \"Astra\",\n        \"year\": 2003,\n        \"plate\": \"AAA1234\",\n        \"mileage\": 72000,\n        \"created_at\": \"2025-10-22 17:20:50\",\n        \"updated_at\": \"2025-10-22 17:20:50\"\n    }\n}"
						},
						{
							"name": "Unprocessable Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"brand\": \"Chevrolet\",\r\n    \"model\": \"Astra\",\r\n    \"year\": 2003,\r\n    \"plate\": \"AAA123a\",\r\n    \"mileage\": 72000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{home_uri}}/api/vehicles",
									"host": [
										"{{home_uri}}"
									],
									"path": [
										"api",
										"vehicles"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 17:20:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"The field plate is not a plate format valid (ex: AAA1234 ou AAA1B23).\",\n    \"errors\": {\n        \"plate\": [\n            \"The field plate is not a plate format valid (ex: AAA1234 ou AAA1B23).\"\n        ]\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"brand\": \"Chevrolet\",\r\n    \"model\": \"Astra\",\r\n    \"year\": 2003,\r\n    \"plate\": \"AAA1234\",\r\n    \"mileage\": 72000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/vehicles",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 17:21:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Unauthenticated.\",\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Update vehicle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"brand\": \"Opel\",\r\n    \"model\": \"Corsa\",\r\n    \"year\": 1994,\r\n    \"plate\": \"ABC1D35\",\r\n    \"mileage\": 1980001\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"vehicles",
								"{{vehicle_id}}"
							]
						},
						"description": "Atualiza os dados de um veículo específico do usuário, usando o ID desse veículo.\n\nEsta rota aceita um JSON com **todos** os campos do veículo (método PUT).\n\n### Parâmetro da URL\n\n- `vehicle` (integer) - **Obrigatório**\n    \n    - O ID do veículo que você deseja atualizar.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/vehicles/1`\n\n### Corpo da Requisição (JSON)\n\n**Obrigatório** enviar um objeto JSON com todos os campos, mesmo os que não foram alterados.\n\n- `brand` (string)\n    \n    - A marca do veículo (ex: \"Honda\").\n        \n- `model` (string)\n    \n    - O modelo do veículo (ex: \"Civic\").\n        \n- `year` (integer)\n    \n    - O ano de fabrico (ex: `2020`).\n        \n- `mileage` (integer)\n    \n    - A quilometragem atual do veículo (ex: `45000`). **Nota:** A quilometragem enviada não pode ser _menor_ que a quilometragem já registada.\n        \n- `plate` (string)\n    \n    - A placa do veículo. Deve estar no formato Renavan (AAA1234) ou Mercosul (AAA1B23).\n        \n\n**Exemplo de Corpo:**\n\n``` json\n{\n    \"brand\": \"Opel\",\n    \"model\": \"Corsa\",\n    \"year\": 1994,\n    \"plate\": \"ABC1D35\",\n    \"mileage\": 1980001\n}\n\n ```\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo do veículo que acabou de ser atualizado.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Os dados enviados falharam na validação. O corpo da resposta conterá uma mensagem e uma lista de erros indicando quais campos são inválidos (ex: `plate` com formato incorreto, `mileage` menor que o atual, `plate` já existente).\n        \n- **404 (Not Found):**\n    \n    - Ocorre se o ID do veículo (`{vehicle}`) não for encontrado.\n        \n- **403 (Forbidden):**\n    \n    - O usuário autenticado não tem permissão para atualizar este veículo (ex: pertence a outro usuário).\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar atualizar o veículo."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"brand\": \"Opel\",\r\n    \"model\": \"Corsa\",\r\n    \"year\": 1994,\r\n    \"plate\": \"ABC1D35\",\r\n    \"mileage\": 1980001\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/api/vehicles/",
									"path": [
										"api",
										"vehicles",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 16:26:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Vehicle updated\",\n    \"data\": {\n        \"id\": 5,\n        \"brand\": \"Opel\",\n        \"model\": \"Corsa\",\n        \"year\": 1994,\n        \"plate\": \"ABC1D35\",\n        \"mileage\": 1980001,\n        \"created_at\": \"2025-10-22 02:20:37\",\n        \"updated_at\": \"2025-10-22 11:00:21\"\n    }\n}"
						},
						{
							"name": "Unprocessable Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"brand\": \"Toyota\",\r\n    \"model\": \"Corolla\",\r\n    \"year\": 2019,\r\n    \"plate\": \"DEFA878\",\r\n    \"mileage\": 62000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles",
										"{{vehicle_id}}"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 17:12:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"The field plate is not a plate format valid (ex: AAA1234 ou AAA1B23).\",\n    \"errors\": {\n        \"plate\": [\n            \"The field plate is not a plate format valid (ex: AAA1234 ou AAA1B23).\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Vehicle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"vehicles",
								"{{vehicle_id}}"
							]
						},
						"description": "Remove um veículo específico do usuário, usando o ID desse veículo.\n\nEsta ação é permanente e irá remover o veículo e todos os seus dados associados (manutenções, alertas, etc.) através da configuração de cascata do banco de dados.\n\n### Parâmetro da URL\n\n- `vehicle` (integer) - **Obrigatório**\n    \n    - O ID do veículo que você deseja remover.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/vehicles/1`\n\n### Corpo da Requisição\n\nNão é necessário enviar um corpo (Body) para esta requisição.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna uma resposta de sucesso simples, indicando que o recurso foi removido. O campo `data` será nulo.\n\n#### Erros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID do veículo (`{vehicle}`) não for encontrado.\n        \n    - Também ocorre se o veículo existir, mas pertencer a outro usuário.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar remover o veículo."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "/api/vehicles/",
									"path": [
										"api",
										"vehicles",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 17:45:28 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Vehicle removed\",\n    \"data\": []\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"brand\": \"Opel\",\r\n    \"model\": \"Corsa\",\r\n    \"year\": 1994,\r\n    \"plate\": \"ABC1D35\",\r\n    \"mileage\": 1980001\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles",
										"{{vehicle_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 17:43:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Vehicle not found\",\n    \"errors\": []\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles",
										"{{vehicle_id}}"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 17:44:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Error on remove vehicle\",\n    \"errors\": []\n}"
						}
					]
				}
			]
		},
		{
			"name": "Maintenances",
			"item": [
				{
					"name": "List all maintenances",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/maintenances/?per_page=15&page=1",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenances",
								""
							],
							"query": [
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "filter[vehicle.plate]",
									"value": "AAA1234",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "mileage",
									"disabled": true
								}
							]
						},
						"description": "Esta rota lista todos os registos de manutenção paginados do usuário autenticado.\n\n### Paginação\n\n- `?page=1`: O número da página.\n    \n- `?per_page=15`: Quantos itens por página (Máximo: 15).\n    \n\n### Filtragem\n\nUse o formato `?filter[campo]=valor` para filtrar os resultados.\n\n**Filtros permitidos:**\n\n- `filter[vehicle_id]`: Filtra por um ID de veículo específico.\n    \n- `filter[service_date]`: Filtra por data do serviço. (O pacote `spatie` é inteligente e permite filtros de data, como ?`filter[service_date]=2025-10-23`).\n    \n- `filter[mileage]`: Filtra pela quilometragem exata.\n    \n- `filter[vehicle.plate]`: Filtra pela placa do veículo (filtro de relacionamento).\n    \n\n**Exemplo de filtro:**  \n`{{base_uri}}/api/maintenances?filter[vehicle.plate]=ABC1D34`\n\n### Ordenação\n\nUse o parâmetro `?sort=campo` para ordenar.\n\n- Para ordenar de forma **ascendente**, use o nome do campo: `sort=service_date`.\n    \n- Para ordenar de forma **descendente**, adicione um hífen (`-`): `sort=-mileage`.\n    \n\n**Campos de ordenação permitidos:**\n\n- `vehicle_id`\n    \n- `service_date`\n    \n- `mileage`\n    \n\n**Exemplo de ordenação:**  \n`{{base_uri}}/api/maintenances?sort=-service_date`"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "/api/maintenances/?per_page=15&page=1",
									"path": [
										"api",
										"maintenances",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 21:51:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenances\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"vehicle_id\": 1,\n            \"description\": \"Teste\",\n            \"cost\": \"5.00\",\n            \"service_date\": \"2025-10-21\",\n            \"mileage\": 15000,\n            \"service_type\": \"oil_change\",\n            \"created_at\": \"2025-10-22 16:35:15\",\n            \"updated_at\": \"2025-10-22 16:35:18\"\n        },\n        {\n            \"id\": 2,\n            \"vehicle_id\": 1,\n            \"description\": \"Troca de óleo e filtros\",\n            \"cost\": \"600.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 72000,\n            \"service_type\": \"oil_change\",\n            \"created_at\": \"2025-10-22 20:34:18\",\n            \"updated_at\": \"2025-10-22 20:34:18\"\n        },\n        {\n            \"id\": 3,\n            \"vehicle_id\": 1,\n            \"description\": \"Troca de óleo e filtros\",\n            \"cost\": \"600.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 72000,\n            \"service_type\": \"oil_change\",\n            \"created_at\": \"2025-10-22 20:43:08\",\n            \"updated_at\": \"2025-10-22 20:43:08\"\n        },\n        {\n            \"id\": 4,\n            \"vehicle_id\": 1,\n            \"description\": \"Troca de óleo e filtros\",\n            \"cost\": \"600.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 72000,\n            \"service_type\": null,\n            \"created_at\": \"2025-10-22 20:50:18\",\n            \"updated_at\": \"2025-10-22 20:50:18\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/maintenances?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/maintenances?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/maintenances?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/maintenances\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 4,\n    \"total\": 4\n}"
						},
						{
							"name": "Success (Filtered by Vehicle Plate)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenances/?per_page=15&page=1&filter[vehicle.plate]=AAA1234",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "filter[vehicle.plate]",
											"value": "AAA1234"
										},
										{
											"key": "sort",
											"value": "mileage",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 13:44:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenances\",\n    \"data\": [\n        {\n            \"id\": 6,\n            \"vehicle_id\": 7,\n            \"description\": \"Troca dos pneus dianteiros\",\n            \"cost\": \"780.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 12000,\n            \"service_type\": null,\n            \"created_at\": \"2025-10-23 13:40:43\",\n            \"updated_at\": \"2025-10-23 13:40:43\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/maintenances?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/maintenances?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/maintenances?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/maintenances\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 1,\n    \"total\": 1\n}"
						},
						{
							"name": "Success (Sorted by mileage)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenances/?per_page=15&page=1&sort=mileage",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "filter[vehicle.plate]",
											"value": "AAA1234",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "mileage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 13:45:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenances\",\n    \"data\": [\n        {\n            \"id\": 6,\n            \"vehicle_id\": 7,\n            \"description\": \"Troca dos pneus dianteiros\",\n            \"cost\": \"780.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 12000,\n            \"service_type\": null,\n            \"created_at\": \"2025-10-23 13:40:43\",\n            \"updated_at\": \"2025-10-23 13:40:43\"\n        },\n        {\n            \"id\": 5,\n            \"vehicle_id\": 2,\n            \"description\": \"Troca de óleo e filtros\",\n            \"cost\": \"600.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 72000,\n            \"service_type\": null,\n            \"created_at\": \"2025-10-23 09:11:48\",\n            \"updated_at\": \"2025-10-23 09:11:48\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/maintenances?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/maintenances?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/maintenances?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/maintenances\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 2,\n    \"total\": 2\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenances/?per_page=15&page=1",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 21:50:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Unauthenticated.\",\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "List all maintenances by vehicle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}/maintenances/?per_page=15&page=1",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"vehicles",
								"{{vehicle_id}}",
								"maintenances",
								""
							],
							"query": [
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "fiter[service_date]",
									"value": "2025-10-19",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "-mileage",
									"disabled": true
								}
							]
						},
						"description": "Esta rota lista todos os registos de manutenção **para um veículo específico**.\n\nA rota já está pré-filtrada pelo `{vehicle_id}` (veículo) fornecido na URL. A autorização é verificada para garantir que o usuário autenticado é o dono do veículo antes de retornar os dados.\n\nA rota também suporta filtragem e ordenação adicionais sobre os resultados.\n\n### Parâmetro da URL\n\n- `{{base_uri}}/api/vehicles/{vehicle_id}/maintenances`\n    \n    - `{vehicle_id}`: O ID do veículo que você deseja consultar. Use uma variável do Postman (ex: `{vehicle_id}`) para isto.\n        \n\n### Paginação\n\n- `?page=1`: O número da página.\n    \n- `?per_page=15`: Quantos itens por página (Máximo: 15).\n    \n\n### Filtragem\n\nUse o formato `?filter[campo]=valor` para filtrar os resultados.\n\n**Filtros permitidos:**\n\n- `filter[service_date]`: Filtra por data do serviço.\n    \n- `filter[mileage]`: Filtra pela quilometragem exata.\n    \n\n**Exemplo de filtro:**  \n`{{base_uri}}/api/vehicles/{vehicle_id}/maintenances?filter[service_date]=2025-10-23`\n\n### Ordenação\n\nUse o parâmetro `?sort=campo` para ordenar.\n\n- Para ordenar de forma **ascendente**, use o nome do campo: `sort=service_date`.\n    \n- Para ordenar de forma **descendente**, adicione um hífen (`-`): `sort=-mileage`.\n    \n\n**Campos de ordenação permitidos:**\n\n- `service_date`\n    \n- `mileage`\n    \n\n**Exemplo de ordenação:**  \n`{{base_uri}}/api/vehicles/{vehicle_id}/maintenances?sort=-service_date`"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "/api/vehicles//maintenances/?per_page=15&page=1",
									"path": [
										"api",
										"vehicles",
										"",
										"maintenances",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 22:37:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenances\",\n    \"data\": [\n        {\n            \"id\": 2,\n            \"vehicle_id\": 1,\n            \"description\": \"Troca de óleo e filtros\",\n            \"cost\": \"600.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 72000,\n            \"service_type\": \"oil_change\",\n            \"created_at\": \"2025-10-22 20:34:18\",\n            \"updated_at\": \"2025-10-22 20:34:18\"\n        },\n        {\n            \"id\": 3,\n            \"vehicle_id\": 1,\n            \"description\": \"Troca de óleo e filtros\",\n            \"cost\": \"600.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 72000,\n            \"service_type\": \"oil_change\",\n            \"created_at\": \"2025-10-22 20:43:08\",\n            \"updated_at\": \"2025-10-22 20:43:08\"\n        },\n        {\n            \"id\": 4,\n            \"vehicle_id\": 1,\n            \"description\": \"Troca de óleo e filtros\",\n            \"cost\": \"600.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 72000,\n            \"service_type\": null,\n            \"created_at\": \"2025-10-22 20:50:18\",\n            \"updated_at\": \"2025-10-22 20:50:18\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/vehicles/1/maintenances?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/vehicles/1/maintenances?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/vehicles/1/maintenances?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/vehicles/1/maintenances\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 3,\n    \"total\": 3\n}"
						},
						{
							"name": "Success (Filtered by service date)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}/maintenances/?per_page=15&page=1&fiter[service_date]=2025-10-19",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles",
										"{{vehicle_id}}",
										"maintenances",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "fiter[service_date]",
											"value": "2025-10-19"
										},
										{
											"key": "sort",
											"value": "-mileage",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 13:57:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenances\",\n    \"data\": [\n        {\n            \"id\": 5,\n            \"vehicle_id\": 2,\n            \"description\": \"Troca de óleo e filtros\",\n            \"cost\": \"600.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 72000,\n            \"service_type\": null,\n            \"created_at\": \"2025-10-23 09:11:48\",\n            \"updated_at\": \"2025-10-23 09:11:48\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/vehicles/2/maintenances?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/vehicles/2/maintenances?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/vehicles/2/maintenances?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/vehicles/2/maintenances\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 1,\n    \"total\": 1\n}"
						},
						{
							"name": "Success (Sorted by mileage)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}/maintenances/?per_page=15&page=1&sort=-mileage",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles",
										"{{vehicle_id}}",
										"maintenances",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "fiter[service_date]",
											"value": "2025-10-19",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "-mileage"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 13:59:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenances\",\n    \"data\": [\n        {\n            \"id\": 7,\n            \"vehicle_id\": 2,\n            \"description\": \"Limpeza do ar condicionado\",\n            \"cost\": \"1250.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 89000,\n            \"service_type\": null,\n            \"created_at\": \"2025-10-23 13:59:22\",\n            \"updated_at\": \"2025-10-23 13:59:22\"\n        },\n        {\n            \"id\": 5,\n            \"vehicle_id\": 2,\n            \"description\": \"Troca de óleo e filtros\",\n            \"cost\": \"600.23\",\n            \"service_date\": \"2025-10-19\",\n            \"mileage\": 72000,\n            \"service_type\": null,\n            \"created_at\": \"2025-10-23 09:11:48\",\n            \"updated_at\": \"2025-10-23 09:11:48\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/vehicles/2/maintenances?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/vehicles/2/maintenances?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/vehicles/2/maintenances?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/vehicles/2/maintenances\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 2,\n    \"total\": 2\n}"
						}
					]
				},
				{
					"name": "Show maintenance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenances",
								"{{maintenance_id}}"
							]
						},
						"description": "Obtém os dados de um registo de manutenção específico, usando o ID dessa manutenção.\n\n### Parâmetro da URL\n\n- `maintenance` (integer) - **Obrigatório**\n    \n    - O ID do registo de manutenção que você deseja consultar.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/maintenances/123`\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo do registo de manutenção encontrado.\n\n#### Erros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID da manutenção (`{maintenance}`) não for encontrado.\n        \n    - Também ocorre se o registo de manutenção existir, mas pertencer a outro usuário.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao processar a requisição."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{home_uri}}/api/maintenances/",
									"host": [
										"{{home_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 21:51:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Maintenance found\",\n    \"data\": {\n        \"id\": 1,\n        \"vehicle_id\": 1,\n        \"description\": \"Teste\",\n        \"cost\": \"5.00\",\n        \"service_date\": \"2025-10-21\",\n        \"mileage\": 15000,\n        \"service_type\": \"oil_change\",\n        \"created_at\": \"2025-10-22 16:35:15\",\n        \"updated_at\": \"2025-10-22 16:35:18\"\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenances/1",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										"1"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 21:50:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Unauthenticated.\",\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Store maintenance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"let maintenanceId = jsonData.data.id;\r",
									"pm.collectionVariables.set(\"maintenance_id\", maintenanceId);\r",
									"\r",
									"console.log(\"Variável maintenance_id definida como: \" + maintenanceId);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"cost\": 600.23,\r\n    \"mileage\": 72000,\r\n    \"service_type\": \"oil_change\",\r\n    \"service_date\": \"2025-10-19\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_uri}}/api/maintenances",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenances"
							]
						},
						"description": "Cria um novo registo de manutenção associado a um dos veículos do usuário.\n\n### Corpo da Requisição (JSON)\n\n**Obrigatório** enviar um objeto JSON com os seguintes campos:\n\n- `vehicle_id` (integer)\n    \n    - O ID do veículo ao qual esta manutenção pertence.\n        \n- `description` (string)\n    \n    - Uma breve descrição do serviço realizado (ex: \"Troca de óleo e filtro de ar\").\n        \n- `cost` (number)\n    \n    - O custo do serviço (ex: `350.50`).\n        \n- `service_date` (string)\n    \n    - A data em que o serviço foi realizado (formato: `YYYY-MM-DD`).\n        \n- `mileage` (integer)\n    \n    - A quilometragem do veículo no momento do serviço.\n        \n- `service_type` (string)\n    \n    - O identificador do tipo de serviço (ex: `oil_change`, `brakes`, `tire_change`).\n        \n\n**Exemplo de Corpo:**\n\n``` json\n{\n    \"vehicle_id\": 1,\n    \"description\": \"Troca de óleo e filtros\",\n    \"cost\": 600.23,\n    \"mileage\": 72000,\n    \"service_type\": \"oil_change\",\n    \"service_date\": \"2025-10-19\"\n}\n\n ```\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo da manutenção que acabou de ser criada.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Os dados enviados falharam na validação. O corpo da resposta conterá uma mensagem e uma lista de erros indicando quais campos são inválidos (ex: `description` em falta, `service_date` num formato incorreto, `service_type` inválido).\n        \n- **404 (Not Found):**\n    \n    - O `vehicle_id` enviado na requisição não corresponde a nenhum veículo encontrado.\n        \n- **403 (Forbidden):**\n    \n    - O usuário autenticado não tem permissão para adicionar registos a este veículo (ex: o veículo pertence a outro usuário)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"cost\": 600.23,\r\n    \"mileage\": 72000,\r\n    \"service_type\": \"oil_change\",\r\n    \"service_date\": \"2025-10-19\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/api/maintenances",
									"path": [
										"api",
										"maintenances"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 20:43:08 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Maintenance stored\",\n    \"data\": {\n        \"id\": 3,\n        \"vehicle_id\": 1,\n        \"description\": \"Troca de óleo e filtros\",\n        \"cost\": 600.23,\n        \"service_date\": \"2025-10-19\",\n        \"mileage\": 72000,\n        \"service_type\": \"oil_change\",\n        \"created_at\": \"2025-10-22 20:43:08\",\n        \"updated_at\": \"2025-10-22 20:43:08\"\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"coast\": 600.23,\r\n    \"mileage\": 72000,\r\n    \"service_type\": \"oil_change\",\r\n    \"service_date\": \"2025-10-19\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/maintenances",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 20:30:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Unauthenticated.\",\n    \"errors\": []\n}"
						},
						{
							"name": "Unprocessable Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"cost\": 600.23,\r\n    \"mileage\": 72000,\r\n    \"service_type\": \"oil_changes\",\r\n    \"service_date\": \"2025-10-19\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/maintenances",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 20:43:56 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"The field service type is not a valid service type.\",\n    \"errors\": {\n        \"service_type\": [\n            \"The field service type is not a valid service type.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Update maintenance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"cost\": 600.33,\r\n    \"mileage\": 72000,\r\n    \"service_type\": \"oil_change\",\r\n    \"service_date\": \"2025-10-19\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenances",
								"{{maintenance_id}}"
							]
						},
						"description": "Atualiza um registo de manutenção existente, usando o ID dessa manutenção.\n\nEsta rota aceita um JSON com **todos** os campos da manutenção (método PUT).\n\n### Parâmetro da URL\n\n- `maintenance` (integer) - **Obrigatório**\n    \n    - O ID do registo de manutenção que você deseja atualizar.\n        \n\n**Exemplo de URL:**  \n`{{base_url}}/api/maintenances/123`\n\n### Corpo da Requisição (JSON)\n\n**Obrigatório** enviar um objeto JSON com todos os campos, mesmo os que não foram alterados.\n\n- `vehicle_id` (integer)\n    \n    - O ID do veículo ao qual esta manutenção pertence.\n        \n- `description` (string)\n    \n    - A descrição do serviço.\n        \n- `cost` (number)\n    \n    - O custo do serviço.\n        \n- `service_date` (string)\n    \n    - A data do serviço (formato: `YYYY-MM-DD`).\n        \n- `mileage` (integer)\n    \n    - A quilometragem do veículo no momento do serviço.\n        \n- `service_type` (string)\n    \n    - O identificador do tipo de serviço (ex: `oil_change`).\n        \n\n**Exemplo de Corpo:**\n\n``` json\n{\n    \"vehicle_id\": 1,\n    \"description\": \"Troca de óleo e filtros\",\n    \"cost\": 600.33,\n    \"mileage\": 72000,\n    \"service_type\": \"oil_change\",\n    \"service_date\": \"2025-10-19\"\n}\n\n ```\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo da manutenção que acabou de ser atualizada.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Os dados enviados falharam na validação. O corpo da resposta conterá uma mensagem e uma lista de erros indicando quais campos são inválidos (ex: `cost` não é um número, `service_date` num formato incorreto).\n        \n- **404 (Not Found):**\n    \n    - Ocorre se o ID da manutenção (`{maintenance}`) não for encontrado.\n        \n    - Também pode ocorrer se o `vehicle_id` enviado no corpo não for encontrado.\n        \n- **403 (Forbidden):**\n    \n    - O usuário autenticado não tem permissão para atualizar este registo (ex: pertence a outro usuário).\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao processar a requisição."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"cost\": 600.33,\r\n    \"mileage\": 72000,\r\n    \"service_type\": \"oil_change\",\r\n    \"service_date\": \"2025-10-19\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/api/maintenances/",
									"path": [
										"api",
										"maintenances",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 22:19:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Maintenance updated\",\n    \"data\": {\n        \"id\": 1,\n        \"vehicle_id\": 1,\n        \"description\": \"Troca de óleo e filtros\",\n        \"cost\": 600.33,\n        \"service_date\": \"2025-10-19\",\n        \"mileage\": 72000,\n        \"service_type\": \"oil_change\",\n        \"created_at\": \"2025-10-22 16:35:15\",\n        \"updated_at\": \"2025-10-22 22:09:38\"\n    }\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 3,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"cost\": 600.33,\r\n    \"mileage\": 72000,\r\n    \"service_type\": \"oil_change\",\r\n    \"service_date\": \"2025-10-19\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										"{{maintenance_id}}"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 22:21:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Error on update maintenance\",\n    \"errors\": []\n}"
						},
						{
							"name": "Unprocessable Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"cost\": 600.33,\r\n    \"mileage\": 72000,\r\n    \"service_type\": \"oil_changes\",\r\n    \"service_date\": \"2025-10-19\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										"{{maintenance_id}}"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 22:25:28 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"The field service type is not a valid service type.\",\n    \"errors\": {\n        \"service_type\": [\n            \"The field service type is not a valid service type.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Maintenance",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenances",
								"{{maintenance_id}}"
							]
						},
						"description": "Remove um registo de manutenção específico do sistema, usando o ID dessa manutenção.\n\n### Parâmetro da URL\n\n- `maintenance` (integer) - **Obrigatório**\n    \n    - O ID do registo de manutenção que você deseja remover.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/maintenances/123`\n\n### Corpo da Requisição\n\nNão é necessário enviar um corpo (Body) para esta requisição.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna uma resposta de sucesso simples, indicando que o recurso foi removido. O campo `data` será um array vazio.\n\n**Exemplo de Resposta:**\n\n``` json\n{\n    \"status\": \"success\",\n    \"message\": \"Maintenance removed\",\n    \"data\": []\n}\n\n ```\n\n#### Erros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID da manutenção (`{maintenance}`) não for encontrado.\n        \n    - Também ocorre se o registo de manutenção existir, mas pertencer a outro usuário.\n        \n- **403 (Forbidden):**\n    \n    - O usuário autenticado não tem permissão para remover este registo.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar remover o registo."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "/api/maintenances/",
									"path": [
										"api",
										"maintenances",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 22:29:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Maintenance removed\",\n    \"data\": []\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										"{{maintenance_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 22:28:42 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Resource not found.\",\n    \"errors\": []\n}"
						}
					]
				}
			]
		},
		{
			"name": "Maintenance Alerts",
			"item": [
				{
					"name": "List all maintenance alerts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/maintenance-alerts/?per_page=15&page=1",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenance-alerts",
								""
							],
							"query": [
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "filter[vehicle_id]",
									"value": "2",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "-created_at",
									"disabled": true
								}
							]
						},
						"description": "Lista todos os alertas de manutenção paginados para todos os veículos do usuário autenticado.\n\nEste endpoint suporta filtragem e ordenação para refinar os resultados.\n\n### Paginação\n\n- `?page=1`: O número da página.\n    \n- `?per_page=15`: Quantos itens por página (Máximo: 15).\n    \n\n### Filtragem\n\nUse o formato `?filter[campo]=valor` para filtrar os resultados.\n\n**Filtros permitidos:**\n\n- `filter[vehicle.plate]` (string): Filtra pela placa exata do veículo.\n    \n- `filter[vehicle_id]` (integer): Filtra por um ID de veículo específico.\n    \n- `filter[description]` (string): Filtra pela descrição (busca parcial).\n    \n- `filter[status]` (string): Filtra pelo status atual do alerta.\n    \n    - Valores permitidos: `waiting_send`, `sent`, `canceled`, `completed`\n        \n- `filter[type]` (string): Filtra pelo tipo de alerta.\n    \n    - Valores permitidos: `mileage`, `time`\n        \n\n**Exemplo de filtro:**  \n`{{base_uri}}/api/maintenance-alerts?filter[status]=waiting_send&filter[type]=mileage`\n\n### Ordenação\n\nUse o parâmetro `?sort=campo` para ordenar.\n\n- Para ordenar de forma **ascendente**, use o nome do campo: `sort=vehicle_id`.\n    \n- Para ordenar de forma **descendente**, adicione um hífen (`-`): `sort=-created_at`.\n    \n\n**Campos de ordenação permitidos:**\n\n- `vehicle_id`\n    \n- `vehicle.plate`\n    \n- `created_at` (Data de criação do alerta)\n    \n\n**Exemplo de ordenação (mais recentes primeiro):**  \n`{{base_uri}}/api/maintenance-alerts?sort=-created_at`\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna um objeto JSON com a lista paginada de alertas de manutenção.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Ocorre se um filtro ou parâmetro de ordenação inválido for fornecido.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao processar a requisição."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "/api/maintenance-alerts/?per_page=15&page=1",
									"path": [
										"api",
										"maintenance-alerts",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 23:18:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenance alerts\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"vehicle_id\": 1,\n            \"description\": \"Troca de óleo - Honda Civic\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 50000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 2,\n            \"vehicle_id\": 1,\n            \"description\": \"Revisão dos 10.000km - Honda Civic\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 50000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 3,\n            \"vehicle_id\": 1,\n            \"description\": \"Revisão anual - Honda Civic\",\n            \"type\": \"time\",\n            \"value_to_alert\": 365,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 4,\n            \"vehicle_id\": 2,\n            \"description\": \"Troca de óleo - Toyota Corolla\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 67000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 5,\n            \"vehicle_id\": 2,\n            \"description\": \"Revisão dos 10.000km - Toyota Corolla\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 70000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 6,\n            \"vehicle_id\": 2,\n            \"description\": \"Revisão anual - Toyota Corolla\",\n            \"type\": \"time\",\n            \"value_to_alert\": 365,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/maintenance-alerts?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/maintenance-alerts?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/maintenance-alerts?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/maintenance-alerts\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 6,\n    \"total\": 6\n}"
						},
						{
							"name": "Success (Filtered by vehicle id)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/?per_page=15&page=1&filter[vehicle_id]=2",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "filter[vehicle_id]",
											"value": "2"
										},
										{
											"key": "sort",
											"value": "-created_at",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 14:25:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenance alerts\",\n    \"data\": [\n        {\n            \"id\": 4,\n            \"vehicle_id\": 2,\n            \"description\": \"Troca de óleo - Toyota Corolla\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 67000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 5,\n            \"vehicle_id\": 2,\n            \"description\": \"Revisão dos 10.000km - Toyota Corolla\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 70000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 6,\n            \"vehicle_id\": 2,\n            \"description\": \"Revisão anual - Toyota Corolla\",\n            \"type\": \"time\",\n            \"value_to_alert\": 365,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/maintenance-alerts?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/maintenance-alerts?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/maintenance-alerts?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/maintenance-alerts\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 3,\n    \"total\": 3\n}"
						},
						{
							"name": "Success (Sorted by created at)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/?per_page=15&page=1&sort=-created_at",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "filter[vehicle_id]",
											"value": "2",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 14:32:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenance alerts\",\n    \"data\": [\n        {\n            \"id\": 6,\n            \"vehicle_id\": 2,\n            \"description\": \"Revisão anual - Toyota Corolla\",\n            \"type\": \"time\",\n            \"value_to_alert\": 365,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-23 00:29:36\",\n            \"updated_at\": \"2025-10-23 00:29:36\"\n        },\n        {\n            \"id\": 5,\n            \"vehicle_id\": 2,\n            \"description\": \"Revisão dos 10.000km - Toyota Corolla\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 70000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 04:29:36\",\n            \"updated_at\": \"2025-10-22 04:29:36\"\n        },\n        {\n            \"id\": 4,\n            \"vehicle_id\": 2,\n            \"description\": \"Troca de óleo - Toyota Corolla\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 67000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/maintenance-alerts?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/maintenance-alerts?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/maintenance-alerts?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/maintenance-alerts\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 3,\n    \"total\": 3\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/?per_page=15&page=1",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 23:17:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Unauthenticated.\",\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "List all maintenance alerts by vehicle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}/alerts/?per_page=15&page=1",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"vehicles",
								"{{vehicle_id}}",
								"alerts",
								""
							],
							"query": [
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "filter[description]",
									"value": "anual",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "-created_at",
									"disabled": true
								}
							]
						},
						"description": "Lista todos os alertas de manutenção paginados **para um veículo específico**.\n\nA rota já está pré-filtrada pelo `{vehicle}` (veículo) fornecido na URL. Apenas os alertas do veículo especificado serão retornados.\n\nEste endpoint também suporta filtragem e ordenação adicionais sobre os resultados.\n\n### Parâmetro da URL\n\n- `vehicle` (integer) - **Obrigatório**\n    \n    - O ID do veículo para o qual você deseja consultar os alertas.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/vehicles/1/alerts`\n\n### Paginação\n\n- `?page=1`: O número da página.\n    \n- `?per_page=15`: Quantos itens por página (Máximo: 15).\n    \n\n### Filtragem\n\nUse o formato `?filter[campo]=valor` para filtrar os resultados.\n\n**Filtros permitidos:**\n\n- `filter[description]` (string): Filtra pela descrição (busca parcial).\n    \n- `filter[status]` (string): Filtra pelo status atual do alerta.\n    \n    - Valores permitidos: `waiting_send`, `sent`, `canceled`, `completed`\n        \n- `filter[type]` (string): Filtra pelo tipo de alerta.\n    \n    - Valores permitidos: `mileage`, `time`\n        \n\n**Exemplo de filtro:**  \n`{{base_uri}}/api/vehicles/1/alerts?filter[status]=waiting_send`\n\n### Ordenação\n\nUse o parâmetro `?sort=campo` para ordenar.\n\n- Para ordenar de forma **ascendente**, use o nome do campo: `sort=status`.\n    \n- Para ordenar de forma **descendente**, adicione um hífen (`-`): `sort=-created_at`.\n    \n\n**Campos de ordenação permitidos:**\n\n- `status`\n    \n- `created_at` (Data de criação do alerta)\n    \n\n**Exemplo de ordenação (mais recentes primeiro):**  \n`{{base_uri}}/api/vehicles/1/alerts?sort=-created_at`\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna um objeto JSON com a lista paginada de alertas de manutenção para o veículo especificado.\n\n#### Erros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID do veículo (`{vehicle}`) não for encontrado.\n        \n    - Também ocorre se o veículo existir, mas pertencer a outro usuário.\n        \n- **422 (Unprocessable Content):**\n    \n    - Ocorre se um filtro ou parâmetro de ordenação inválido for fornecido.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao processar a requisição."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "/api/vehicles//alerts/?per_page=15&page=1",
									"path": [
										"api",
										"vehicles",
										"",
										"alerts",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 23:20:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenance alerts\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"vehicle_id\": 1,\n            \"description\": \"Troca de óleo - Honda Civic\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 50000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 2,\n            \"vehicle_id\": 1,\n            \"description\": \"Revisão dos 10.000km - Honda Civic\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 50000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        },\n        {\n            \"id\": 3,\n            \"vehicle_id\": 1,\n            \"description\": \"Revisão anual - Honda Civic\",\n            \"type\": \"time\",\n            \"value_to_alert\": 365,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/vehicles/1/alerts?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/vehicles/1/alerts?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/vehicles/1/alerts?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/vehicles/1/alerts\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 3,\n    \"total\": 3\n}"
						},
						{
							"name": "Success (Filtered by description)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}/alerts/?per_page=15&page=1&filter[description]=anual",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles",
										"{{vehicle_id}}",
										"alerts",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "filter[description]",
											"value": "anual"
										},
										{
											"key": "sort",
											"value": "created_at",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 14:41:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenance alerts\",\n    \"data\": [\n        {\n            \"id\": 6,\n            \"vehicle_id\": 2,\n            \"description\": \"Revisão anual - Toyota Corolla\",\n            \"type\": \"time\",\n            \"value_to_alert\": 365,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-23 00:29:36\",\n            \"updated_at\": \"2025-10-23 00:29:36\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/vehicles/2/alerts?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/vehicles/2/alerts?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/vehicles/2/alerts?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/vehicles/2/alerts\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 1,\n    \"total\": 1\n}"
						},
						{
							"name": "Success (Sorted by created at)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/vehicles/{{vehicle_id}}/alerts/?per_page=15&page=1&sort=-created_at",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"vehicles",
										"{{vehicle_id}}",
										"alerts",
										""
									],
									"query": [
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "filter[description]",
											"value": "anual",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 14:42:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenance alerts\",\n    \"data\": [\n        {\n            \"id\": 6,\n            \"vehicle_id\": 2,\n            \"description\": \"Revisão anual - Toyota Corolla\",\n            \"type\": \"time\",\n            \"value_to_alert\": 365,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-23 00:29:36\",\n            \"updated_at\": \"2025-10-23 00:29:36\"\n        },\n        {\n            \"id\": 5,\n            \"vehicle_id\": 2,\n            \"description\": \"Revisão dos 10.000km - Toyota Corolla\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 70000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 04:29:36\",\n            \"updated_at\": \"2025-10-22 04:29:36\"\n        },\n        {\n            \"id\": 4,\n            \"vehicle_id\": 2,\n            \"description\": \"Troca de óleo - Toyota Corolla\",\n            \"type\": \"mileage\",\n            \"value_to_alert\": 67000,\n            \"status\": \"waiting_send\",\n            \"created_at\": \"2025-10-22 00:29:36\",\n            \"updated_at\": \"2025-10-22 00:29:36\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/vehicles/2/alerts?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/vehicles/2/alerts?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/vehicles/2/alerts?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/vehicles/2/alerts\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 3,\n    \"total\": 3\n}"
						}
					]
				},
				{
					"name": "Show maintenance alert",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenance-alerts",
								"{{maintenance_alert_id}}"
							]
						},
						"description": "Obtém os dados de um alerta de manutenção específico, usando o ID desse alerta.\n\n### Parâmetro da URL\n\n- `maintenance_alert_id` (integer) - **Obrigatório**\n    \n    - O ID do alerta de manutenção que você deseja consultar.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/maintenance-alerts/1`\n\n### Corpo da Requisição\n\nNão é necessário enviar um corpo (Body) para esta requisição.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo do alerta de manutenção encontrado.\n\n#### Erros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID do alerta (`{maintenance_alert_id}`) não for encontrado.\n        \n    - Também ocorre se o alerta existir, mas pertencer a um veículo de outro usuário.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao processar a requisição"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										"{{maintenance_alert_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 23:23:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Maintenance alert found\",\n    \"data\": {\n        \"id\": 1,\n        \"vehicle_id\": 1,\n        \"description\": \"Troca de óleo - Honda Civic\",\n        \"type\": \"mileage\",\n        \"value_to_alert\": 50000,\n        \"status\": \"waiting_send\",\n        \"created_at\": \"2025-10-22 00:29:36\",\n        \"updated_at\": \"2025-10-22 00:29:36\"\n    }\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										"{{maintenance_alert_id}}"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 23:24:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Error on search maintenance alert\",\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Store maintenance alert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"let maintenanceAlertId = jsonData.data.id;\r",
									"pm.collectionVariables.set(\"maintenance_alert_id\", maintenanceAlertId);\r",
									"\r",
									"console.log(\"Variável maintenance_alert_id definida como: \" + maintenanceAlertId);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"type\": \"time\",\r\n    \"value_to_alert\": \"20251026\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_uri}}/api/maintenance-alerts",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenance-alerts"
							]
						},
						"description": "Cria um novo alerta de manutenção para um veículo.\n\nO `status` do alerta será automaticamente definido como `waiting_send` no momento da criação.\n\n### Corpo da Requisição (JSON)\n\n**Obrigatório** enviar um objeto JSON com os seguintes campos:\n\n- `vehicle_id` (integer)\n    \n    - O ID do veículo ao qual este alerta pertence.\n        \n- `description` (string)\n    \n    - Uma breve descrição do alerta (ex: \"Verificar pneus\", \"Próxima troca de óleo\").\n        \n- `type` (string)\n    \n    - O tipo de alerta. Valores permitidos: `mileage`, `time`.\n        \n- `value_to_alert` (integer)\n    \n    - O valor que dispara o alerta.\n        \n    - Se o `type` for `mileage`, este é o valor da quilometragem (ex: `60000`).\n        \n    - Se o `type` for `time`, este é o valor em dias (ex: `365`).\n        \n\n**Exemplo de Corpo:**\n\n``` json\n{\n    \"vehicle_id\": 1,\n    \"description\": \"Troca de óleo e filtros\",\n    \"type\": \"time\",\n    \"value_to_alert\": \"20251026\"\n}\n\n ```\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo do alerta de manutenção que acabou de ser criado.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Os dados enviados falharam na validação. O corpo da resposta conterá uma mensagem e uma lista de erros indicando quais campos são inválidos (ex: `type` inválido, `value_to_alert` em falta).\n        \n- **404 (Not Found):**\n    \n    - O `vehicle_id` enviado na requisição não corresponde a nenhum veículo encontrado.\n        \n- **403 (Forbidden):**\n    \n    - O usuário autenticado não tem permissão para adicionar alertas a este veículo (ex: o veículo pertence a outro usuário).\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar guardar o alerta."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"type\": \"time\",\r\n    \"value_to_alert\": \"20251026\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 22 Oct 2025 23:31:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Maintenance alert stored\",\n    \"data\": {\n        \"id\": 14,\n        \"vehicle_id\": 1,\n        \"description\": \"Troca de óleo e filtros\",\n        \"type\": \"time\",\n        \"value_to_alert\": \"20251026\",\n        \"status\": \"waiting_send\",\n        \"created_at\": \"2025-10-22 23:31:35\",\n        \"updated_at\": \"2025-10-22 23:31:35\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update maintenance alert",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"type\": \"time\",\r\n    \"value_to_alert\": \"20251026\",\r\n    \"status\": \"completed\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenance-alerts",
								"{{maintenance_alert_id}}"
							]
						},
						"description": "Atualiza um alerta de manutenção existente, usando o ID desse alerta.\n\nEsta rota aceita um JSON com **todos** os campos do alerta (método PUT).\n\n### Parâmetro da URL\n\n- `maintenance_alert_id` (integer) - **Obrigatório**\n    \n    - O ID do alerta de manutenção que você deseja atualizar.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/maintenance-alerts/1`\n\n### Corpo da Requisição (JSON)\n\n**Obrigatório** enviar um objeto JSON com todos os campos, mesmo os que não foram alterados.\n\n- `vehicle_id` (integer)\n    \n    - O ID do veículo ao qual este alerta pertence.\n        \n- `description` (string)\n    \n    - A descrição do alerta (ex: \"Verificar pneus\").\n        \n- `type` (string)\n    \n    - O tipo de alerta. Valores permitidos: `mileage`, `time`.\n        \n- `value_to_alert` (integer)\n    \n    - O valor que dispara o alerta (ex: `60000` se o tipo for `mileage`, ou `365` se o tipo for `time`).\n        \n- `status` (string)\n    \n    - O status do alerta. Valores permitidos: `waiting_send`, `sent`, `canceled`, `completed`.\n        \n\n**Exemplo de Corpo:**\n\n``` json\n{\n    \"vehicle_id\": 1,\n    \"description\": \"Troca de óleo e filtros\",\n    \"type\": \"time\",\n    \"value_to_alert\": \"20251026\",\n    \"status\": \"completed\"\n}\n\n ```\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo do alerta de manutenção que acabou de ser atualizado.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Os dados enviados falharam na validação. O corpo da resposta conterá uma mensagem e uma lista de erros indicando quais campos são inválidos (ex: `type` inválido, `status` não permitido, `value_to_alert` em falta).\n        \n- **404 (Not Found):**\n    \n    - Ocorre se o ID do alerta (`{maintenance_alert_id}`) não for encontrado.\n        \n    - Também pode ocorrer se o `vehicle_id` enviado no corpo não for encontrado.\n        \n- **403 (Forbidden):**\n    \n    - O usuário autenticado não tem permissão para atualizar este alerta (ex: pertence a outro usuário) ou não tem permissão para associar alertas ao `vehicle_id` enviado.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar atualizar o alerta."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"type\": \"time\",\r\n    \"value_to_alert\": \"20251026\",\r\n    \"status\": \"completed\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										"{{maintenance_alert_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 00:16:28 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Maintenance alert updated\",\n    \"data\": {\n        \"id\": 14,\n        \"vehicle_id\": 1,\n        \"description\": \"Troca de óleo e filtros\",\n        \"type\": \"time\",\n        \"value_to_alert\": \"20251026\",\n        \"status\": \"completed\",\n        \"created_at\": \"2025-10-22 23:31:35\",\n        \"updated_at\": \"2025-10-23 00:16:28\"\n    }\n}"
						},
						{
							"name": "Unprocessable Content",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"type\": \"time\",\r\n    \"value_to_alert\": \"20251026\",\r\n    \"status\": \"send\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										"{{maintenance_alert_id}}"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 00:17:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"The selected status is invalid.\",\n    \"errors\": {\n        \"status\": [\n            \"The selected status is invalid.\"\n        ]\n    }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"vehicle_id\": 1,\r\n    \"description\": \"Troca de óleo e filtros\",\r\n    \"type\": \"time\",\r\n    \"value_to_alert\": \"20251026\",\r\n    \"status\": \"completed\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										"{{maintenance_alert_id}}"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 00:18:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Unauthenticated.\",\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Delete maintenance alert",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenance-alerts",
								"{{maintenance_alert_id}}"
							]
						},
						"description": "Remove um alerta de manutenção específico do sistema, usando o ID desse alerta.\n\n### Parâmetro da URL\n\n- `maintenance_alert` (integer) - **Obrigatório**\n    \n    - O ID do alerta de manutenção que você deseja remover.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/maintenance-alerts/1`\n\n### Corpo da Requisição\n\nNão é necessário enviar um corpo (Body) para esta requisição.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna uma resposta de sucesso simples, indicando que o recurso foi removido. O campo `data` será nulo.\n\n#### Erros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID do alerta (`{maintenance_alert}`) não for encontrado.\n        \n    - Também ocorre se o alerta existir, mas pertencer a um veículo de outro usuário.\n        \n- **403 (Forbidden):**\n    \n    - O usuário autenticado não tem permissão para remover este alerta.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar remover o alerta."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										"{{maintenance_alert_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 00:36:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Maintenance alert removed\",\n    \"data\": []\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenance-alerts/{{maintenance_alert_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-alerts",
										"{{maintenance_alert_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 00:23:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"error\",\n    \"message\": \"Resource not found.\",\n    \"errors\": []\n}"
						}
					]
				}
			]
		},
		{
			"name": "Maintenance Attachments",
			"item": [
				{
					"name": "List Attachments by maintenance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}/attachments?per_page=15&page=1",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenances",
								"{{maintenance_id}}",
								"attachments"
							],
							"query": [
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "Lista todos os anexos (paginados) de um registo de manutenção **específico**.\n\nA rota já está pré-filtrada pelo `{maintenance}` (manutenção) fornecido na URL.\n\n### Parâmetro da URL\n\n- `maintenance` (integer) - **Obrigatório**\n    \n    - O ID do registo de manutenção para o qual você deseja consultar os anexos.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/maintenances/1/attachments`\n\n### Paginação\n\n- `?page=1`: O número da página.\n    \n- `?per_page=15`: Quantos itens por página (Máximo: 15).\n    \n\n### Filtragem e Ordenação\n\nEste endpoint **não suporta** filtragem ou ordenação por parâmetros de query. Ele retorna todos os anexos da manutenção por ordem de criação.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna um objeto JSON com a lista paginada de anexos para o registo de manutenção especificado.\n\n#### Erros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID da manutenção (`{maintenance_id}`) não for encontrado.\n        \n    - Também ocorre se a manutenção existir, mas pertencer a um veículo de outro usuário.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao processar a requisição."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}/attachments",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										"{{maintenance_id}}",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 09:51:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of maintenance attachments\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"maintenance_id\": 5,\n            \"description\": \"teste\",\n            \"url\": \"http://localhost/api/maintenance-attachments/1\",\n            \"created_at\": \"2025-10-23 09:51:31\",\n            \"updated_at\": \"2025-10-23 09:51:31\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/maintenances/5/attachments?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/maintenances/5/attachments?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/maintenances/5/attachments?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/maintenances/5/attachments\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 1,\n    \"total\": 1\n}"
						}
					]
				},
				{
					"name": "Store Maintenance Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"let maintenanceAttachmentId = jsonData.data.id;\r",
									"pm.collectionVariables.set(\"maintenance_attachment_id\", maintenanceAttachmentId);\r",
									"\r",
									"console.log(\"Variável maintenance_attachment_id definida como: \" + maintenanceAttachmentId);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "description",
									"value": "teste",
									"type": "text"
								},
								{
									"key": "attachment_file",
									"type": "file",
									"src": "/C:/Users/jonat/Downloads/Atividade vue capacitor.png"
								}
							]
						},
						"url": {
							"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}/attachments",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenances",
								"{{maintenance_id}}",
								"attachments"
							]
						},
						"description": "Adiciona um novo anexo (como uma nota fiscal ou foto) a um registo de manutenção existente.\n\nEste endpoint aceita dados no formato **`multipart/form-data`**, não `application/json`.\n\n### Parâmetro da URL\n\n- `maintenance_id` (integer) - **Obrigatório**\n    \n    - O ID do registo de manutenção ao qual este anexo pertence.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/maintenances/1/attachments`\n\n### Corpo da Requisição (multipart/form-data)\n\nVocê deve enviar os seguintes campos como `form-data`:\n\n- `attachment_file` (file) - **Obrigatório**\n    \n    - O ficheiro que você deseja enviar (ex: um PDF, JPG, PNG).\n        \n- `description` (string) - **Obrigatório**\n    \n    - Uma breve descrição para o anexo (ex: \"Nota fiscal da oficina\").\n        \n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna o objeto JSON completo do anexo que acabou de ser criado.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Os dados enviados falharam na validação. O corpo da resposta conterá uma mensagem e uma lista de erros indicando quais campos são inválidos (ex: `attachment_file` em falta, `description` muito longa, tipo de ficheiro não permitido).\n        \n- **404 (Not Found):**\n    \n    - Ocorre se o ID da manutenção (`{maintenance_id}`) não for encontrado.\n        \n- **403 (Forbidden):**\n    \n    - O usuário autenticado não tem permissão para adicionar anexos a este registo de manutenção (ex: pertence a outro usuário).\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar guardar o anexo (ex: falha ao escrever no disco)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "teste",
											"type": "text"
										},
										{
											"key": "attachment_file",
											"type": "file",
											"src": "/C:/Users/jonat/Downloads/Atividade vue capacitor.png"
										}
									]
								},
								"url": {
									"raw": "{{base_uri}}/api/maintenances/{{maintenance_id}}/attachments",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenances",
										"{{maintenance_id}}",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 09:51:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Maintenance attachment stored\",\n    \"data\": {\n        \"id\": 1,\n        \"maintenance_id\": 5,\n        \"description\": \"teste\",\n        \"url\": \"http://localhost/api/maintenance-attachments/1\",\n        \"created_at\": \"2025-10-23 09:51:31\",\n        \"updated_at\": \"2025-10-23 09:51:31\"\n    }\n}"
						}
					]
				},
				{
					"name": "Show Maintenance Attachment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/maintenance-attachments/{{maintenance_attachment_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenance-attachments",
								"{{maintenance_attachment_id}}"
							]
						},
						"description": "Faz o download do ficheiro de anexo associado a um registo de manutenção, usando o ID do anexo.\n\nEste endpoint **não retorna JSON**. Em caso de sucesso, ele retorna o ficheiro diretamente (ex: um PDF ou uma imagem) com os cabeçalhos apropriados para que o navegador/cliente o trate como um download.\n\n### Parâmetro da URL\n\n- `attachment` (integer) - **Obrigatório**\n    \n    - O ID do anexo que você deseja baixar.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/maintenance-attachments/1`\n\n### Corpo da Requisição\n\nNão é necessário enviar um corpo (Body) para esta requisição.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nA resposta será o ficheiro em si (ex: `application/pdf`, `image/jpeg`).\n\nO Postman irá mostrar um botão para \"Save Response\" ou \"Save to a file\". Um navegador irá iniciar o download do ficheiro com o seu nome original (ex: `nota_fiscal_servico.pdf`).\n\n#### Erros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID do anexo (`{attachment}`) não for encontrado.\n        \n    - Também ocorre se o anexo existir, mas pertencer a outro utilizador (a API não vaza a informação de que o recurso existe).\n        \n    - Também ocorre se o registo do anexo for encontrado na base de dados, mas o ficheiro físico não existir no servidor.\n        \n- **403 (Forbidden):**\n    \n    - O utilizador autenticado não tem permissão para aceder a este anexo.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar obter o ficheiro."
					},
					"response": []
				},
				{
					"name": "Delete Maintenance Attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/maintenance-attachments/{{maintenance_attachment_id}}",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"maintenance-attachments",
								"{{maintenance_attachment_id}}"
							]
						},
						"description": "Remove um anexo específico (arquivo e registo) do sistema, usando o ID do anexo.\n\nEsta ação é permanente e irá apagar o arquivo físico do servidor e o seu registo no banco de dados.\n\n### Parâmetro da URL\n\n- `attachment` (integer) - **Obrigatório**\n    \n    - O ID do anexo que você deseja remover.\n        \n\n**Exemplo de URL:**  \n`{{base_uri}}/api/maintenance-attachments/1`\n\n### Corpo da Requisição\n\nNão é necessário enviar um corpo (Body) para esta requisição.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna uma resposta de sucesso simples, indicando que o recurso foi removido. O campo `data` será nulo.\n\n#### Erros Possíveis\n\n- **404 (Not Found):**\n    \n    - Ocorre se o ID do anexo (`{attachment}`) não for encontrado.\n        \n    - Também ocorre se o anexo existir, mas pertencer a outro usuário.\n        \n- **403 (Forbidden):**\n    \n    - O utilizador autenticado não tem permissão para remover este anexo.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao tentar remover o anexo (ex: o arquivo não foi encontrado no disco, mas o registo existia)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/maintenance-attachments/{{maintenance_attachment_id}}",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"maintenance-attachments",
										"{{maintenance_attachment_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 10:24:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Attachment removed\",\n    \"data\": []\n}"
						}
					]
				}
			]
		},
		{
			"name": "Service Types",
			"item": [
				{
					"name": "List Service Types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_uri}}/api/service-types?page=1&per_page=15",
							"host": [
								"{{base_uri}}"
							],
							"path": [
								"api",
								"service-types"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "15"
								},
								{
									"key": "filter[description]",
									"value": "filtro",
									"disabled": true
								}
							]
						},
						"description": "Lista todos os tipos de serviço disponíveis no sistema.\n\nEstes são os tipos usados ao criar ou atualizar um registo de manutenção (ex: \"Troca de Óleo\", \"Freios\"). O campo `identifier` é o valor que deve ser enviado no endpoint `POST /api/maintenances`.\n\nEste endpoint suporta filtragem e paginação.\n\n### Paginação\n\n- `?page=1`: O número da página.\n    \n- `?per_page=15`: Quantos itens por página (Máximo: 15).\n    \n\n### Filtragem\n\nUse o formato `?filter[campo]=valor` para filtrar os resultados.\n\n**Filtros permitidos:**\n\n- `filter[description]` (string): Filtra pelo nome descritivo do serviço (busca parcial).\n    \n- `filter[identifier]` (string): Filtra pelo identificador único do serviço (ex: `oil_change`).\n    \n\n**Exemplo de filtro:**  \n`{{base_uri}}/api/service-types?filter[identifier]=oil_change`\n\n### Ordenação\n\nEste endpoint não suporta ordenação. Os resultados são retornados na ordem padrão.\n\n### Respostas da API\n\n#### Sucesso: 200 OK\n\nRetorna um objeto JSON com a lista paginada de tipos de serviço.\n\n#### Erros Possíveis\n\n- **422 (Unprocessable Content):**\n    \n    - Ocorre se um filtro inválido for fornecido.\n        \n- **500 (Internal Server Error):**\n    \n    - Ocorreu um erro inesperado no servidor ao processar a requisição."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/service-types?page=1&per_page=15",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"service-types"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "15"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 13:23:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of service types\",\n    \"data\": [\n        {\n            \"identifier\": \"oil_change\",\n            \"description\": \"Troca de Óleo\"\n        },\n        {\n            \"identifier\": \"preventive_maintenance\",\n            \"description\": \"Revisão Preventiva\"\n        },\n        {\n            \"identifier\": \"alignment_balancing\",\n            \"description\": \"Alinhamento e Balanceamento\"\n        },\n        {\n            \"identifier\": \"tire_change\",\n            \"description\": \"Troca de Pneus\"\n        },\n        {\n            \"identifier\": \"brakes\",\n            \"description\": \"Freios\"\n        },\n        {\n            \"identifier\": \"suspension\",\n            \"description\": \"Suspensão\"\n        },\n        {\n            \"identifier\": \"electrical_system\",\n            \"description\": \"Sistema Elétrico\"\n        },\n        {\n            \"identifier\": \"air_conditioning\",\n            \"description\": \"Ar Condicionado\"\n        },\n        {\n            \"identifier\": \"filters\",\n            \"description\": \"Filtros\"\n        },\n        {\n            \"identifier\": \"battery\",\n            \"description\": \"Bateria\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/service-types?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/service-types?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/service-types?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/service-types\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 10,\n    \"total\": 10\n}"
						},
						{
							"name": "Success (Filtered by description)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_uri}}/api/service-types?page=1&per_page=15&filter[description]=filtro",
									"host": [
										"{{base_uri}}"
									],
									"path": [
										"api",
										"service-types"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "15"
										},
										{
											"key": "filter[description]",
											"value": "filtro"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": [
								{
									"key": "Host",
									"value": "localhost"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.4.13"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 23 Oct 2025 14:48:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"List of service types\",\n    \"data\": [\n        {\n            \"identifier\": \"filters\",\n            \"description\": \"Filtros\"\n        }\n    ],\n    \"current_page\": 1,\n    \"first_page_url\": \"http://localhost/api/service-types?page=1\",\n    \"from\": 1,\n    \"last_page\": 1,\n    \"last_page_url\": \"http://localhost/api/service-types?page=1\",\n    \"links\": [\n        {\n            \"url\": null,\n            \"label\": \"&laquo; Previous\",\n            \"page\": null,\n            \"active\": false\n        },\n        {\n            \"url\": \"http://localhost/api/service-types?page=1\",\n            \"label\": \"1\",\n            \"page\": 1,\n            \"active\": true\n        },\n        {\n            \"url\": null,\n            \"label\": \"Next &raquo;\",\n            \"page\": null,\n            \"active\": false\n        }\n    ],\n    \"next_page_url\": null,\n    \"path\": \"http://localhost/api/service-types\",\n    \"per_page\": 15,\n    \"prev_page_url\": null,\n    \"to\": 1,\n    \"total\": 1\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_uri",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "vehicle_id",
			"value": ""
		},
		{
			"key": "maintenance_id",
			"value": ""
		},
		{
			"key": "maintenance_alert_id",
			"value": ""
		},
		{
			"key": "maintenance_attachment_id",
			"value": ""
		}
	]
}